TEST DOCUMENTATION FOR soda.testdoc
===============================================
The soda C++ program implements the interactions of a vending machine system, 
simulating tasks like soda delivery, vending machine restocking, and student purchases. 
It features components such as a bottling plant, delivery truck, vending machines,
and WATCards, allowing for dynamic and concurrent scenarios including financial transactions, 
lost cards, and stock replenishments. The user is able to configure parameters of 
the simulation through a configuration file.

USER INTERFACE TESTING

  TEST 1:
  -------
    We will test that arguments are correctly parsed and handled.

    TESTING
    The output of running the program in the command line is shown below:

    $ ./soda test.config 1 1 >> test.out
    $ ./soda d d d >> test.out
    $ ./soda d >> test.out
    $ ./soda >> test.out
    $ ./soda invalid.config >> test.out
    Error: could not open input file "invalid.config"
    $ ./soda 1 2 3 4 >> test.out
    Usage: ./soda  [ config-file | 'd' [ seed ( > 0) | 'd' [ processors (> 0) | 'd'] ] ]

    ANALYSIS
    From the above, we see the program correctly handles parsing arguments for 
    config file, the seed and the processor. It prints an appropriate message 
    for invalid parameters and config file paths.

ALGORITHM TESTING
  For algorithm testing, we will describe a selection of interesting events below.

  TESTCASE 1:
  -------
  The configurations that we will use for testing are in "test.config":

  SodaCost		          2	# Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents		        2	# number of students to create
  MaxPurchases		      1	# maximum number of bottles a student purchases
  NumVendingMachines	  3	# number of vending machines
  MaxStockPerFlavour	  5	# maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour	3	# maximum number of bottles of each flavour generated by the bottling
                          # plant per production run
  TimeBetweenShipments	3	# length of time between shipment pickup
  GroupoffDelay		      10	# length of time between initializing gift cards
  ParentalDelay		      5	# length of time between deposits of funds
  NumCouriers		        1	# maximum number of couriers in the pool

  OUTPUT:
  -------
  $ ./soda test.config 15
  1   Parent  Gropoff WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Mach1   Mach2   Cour0
  2   ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
  3   S       S       S       S                                       S2      S2      S2      S
  4                   C0,5    R0      S       S       S1,1    S1,1
  5                   W       R1              G5                                              t0,5
  6   D0,1            C1,5    R2
  7                           N0,0    P5              V0
  8                                   d0,5
  9   D0,2                    N1,1    U0,15   P               V1      r
  10  D0,2    D1,2    W               D0,0    G4                      R                       T0,5
  11  D0,3                    N1,2    P4      P       B1,3    V2      B1,1                    t1,5
  12                                  d1,4
  13          D0,2            N1,0    U1,16   G8              V0
  14  D1,3    F                       D1,0            F1,0    G1,0    B1,0    r
  15  D0,1                            P8                                      R
  16                                  d2,8
  17  D1,3                            U2,12   P                                       r       L1
  18  D1,1                            D2,0    G5              F1,0                    R
  19                                  P5
  20                                  d0,5
  21                                  U0,12   F                       r
  22  D1,2                            D0,0                            R
  23  D1,3                            F                               F       F       F
  24  D1,3                    F
  25  D0,2
  26  F26             F                                                                       F
  27  ***********************

    EVENT 1:
    -------
    On line 11, we see an event where the Student 0 buys a drink with their 
    WATCard since they do not have their gift card yet. The output shows that 
    their WATCard is delivered on line 10 (T0,5 under Cour0) and their gift card 
    is deposited on line 13 (D0,2 under Groupoff). On line 11, the student must 
    then buy their drink using their WATCard (B1,3) since that is the only option 
    they currently have. This event shows the correct usage of the WATCard when 
    the gift card is not delivered first.

    EVENT 2:
    -------
    On line 17, a courier loses a WATCard during a transfer (L1 on line 17 under 
    Cour0). Since this occurs after the student has already made a purchase with 
    a gift card (G1,0 on line 14) and they only want to buy 1 bottle, this lost
    WATCard does not need to be replaced. The program correctly handles this by 
    not requesting a new WATcard from the WAT office and ensuring that Student 1 
    terminates successfully.

  TESTCASE 2:
  -------
  The configurations that we will use for testing are in "test.config":

  SodaCost		          6	# Manufacturer Suggested Retail Price (MSRP) per bottle
  NumStudents		        2	# number of students to create
  MaxPurchases		      4	# maximum number of bottles a student purchases
  NumVendingMachines	  3	# number of vending machines
  MaxStockPerFlavour	  5	# maximum number of bottles of each flavour in a vending machine
  MaxShippedPerFlavour	1	# maximum number of bottles of each flavour generated by the bottling
                          # plant per production run
  TimeBetweenShipments	3	# length of time between shipment pickup
  GroupoffDelay		      10	# length of time between initializing gift cards
  ParentalDelay		      5	# length of time between deposits of funds
  NumCouriers		        1	# maximum number of couriers in the pool

  OUTPUT:
  -------
  $ ./soda d 10
  1   Parent  Gropoff WATOff  Names   Truck   Plant   Stud0   Stud1   Mach0   Cour0
  2   ******* ******* ******* ******* ******* ******* ******* ******* ******* *******
  3   S       S       S       S                                       S6      S
  4                   C0,5    R0      S       S       S2,3    S2,3
  5                   W       N0,0            G0      V0                      t0,5
  6   D0,3            C1,5    N1,0    P0      P               V0
  7   D0,2            W                                                       T0,5
  8   D1,3    D0,6    T0,11   N0,0    P2      G2      V0                      t1,5
  9                                   d0,2    P
  10  D1,1                            U0,18   G2                      r
  11                                  D0,0                            R
  12          D1,6                    P2      P
  13  D0,2    F               N0,0    d0,2    G2      V0
  14                                  U0,16                           r
  15  D1,2            W               D0,0                            R       T1,5
  16  D0,1                    N0,0                    V0                      t0,11
  17  D0,2                    N1,0    P2      P               V0
  18                          N0,0    d0,2    G3      V0
  19                                  U0,14                           r
  20  D0,3                            D0,0                            R
  21  D1,2                    N0,0    P3              V0      G2,0    B2,0
  22  D0,3                    N0,0    d0,3    P       V0                      T0,11
  23  D1,2                            U0,12   G2                      r
  24                                  D0,0                            R
  25  D0,2            T1,11           P2              G2,0            B2,0
  26                                  d0,2
  27  D0,2            W               U0,11   P                       r       t1,11
  28                                  D0,0    G2                      R
  29  D0,1                            P2      P       B2,10           B2,0
  30                                  d0,2
  31                                  U0,10   G3                      r
  32  D1,1                            D0,0                            R
  33                                                  B2,4            B2,0
  34  D0,3                            P3              F3,0
  35                                  d0,3
  36                                  U0,8    P                       r
  37  D1,1                            D0,0    G2                      R
  38                                  P2
  39                                  d0,2
  40                                  U0,8    P                       r
  41  D0,1                            D0,2    G1                      R
  42                                  P1
  43                                  d0,1
  44                                  U0,8    P                       r
  45  D0,3                            D0,1    G3                      R
  46                                  P3
  47                                  d0,3
  48                                  U0,6    P                       r
  49  D1,3                            D0,1    G2                      R
  50  D1,3            C1,5            P2                      L               L1
  51                                  d0,2
  52                  W               U0,5    P                       r       t1,5
  53  D1,2                            D0,1    G3                      R
  54                                  P3
  55                                  d0,3
  56  D1,2                            U0,3    P                       r
  57                                  D0,1    G1                      R       T1,5
  58  D1,1            T1,11           P1      P
  59                                  d0,1
  60                  W               U0,2    G3                      r       t1,11
  61  D1,3                            D0,0                            R
  62  D1,3                            P3
  63                                  d0,3
  64                                  U0,1    P                       r
  65  D0,1                            D0,2    G0                      R
  66  D1,3                            P0      P                               T1,11
  67  D1,3                            P0      G0              A2      A
  68  D0,2                                    P               B2,10   B2,2
  69                                  P3      G3
  70                                  d0,3
  71                                  U0,3    P                       r
  72  D0,1                            D0,3    G3                      R
  73                                  P3
  74                                  d0,3
  75                                  U0,2    P                       r
  76  D0,3                            D0,2    G1                      R
  77                                                          B2,4    B2,2
  78                                  P1                      F3,1
  79                                  d0,1
  80  D0,2                            U0,3    F                       r
  81                                  D0,1                            R
  82  D1,1                            F                               F
  83  D1,1                    F
  84  D0,3
  85  F77             F                                                       F
  86  ***********************


    EVENT 3:
    -------
    We see an event where an ad plays (A2 under Stud1 and A under Mach0 on line 67) 
    before an item is purchased. Since the ad is not followed by an X, the student
    watches the ad and does not skip it. After the ad, the student receives a free 
    soda and proceeds to buy their soda (as shown by B2,10 under Stud1 and B2,2 
    under Mach0 on line 68). When the student terminates, they have bought 3 sodas 
    and received 1 free soda (as indicated by F3,1 on line 78) and the free soda 
    is correctly excluded from their purchased soda count. 

    EVENT 4:
    -------
    We see an event where a WATCard attempting to transfer $11 (t1,11 under Cour0 
    on line 60) is lost by the courier (L1 under Cour0 and L under Stud1 on line 50).
    Since the student is still trying to make a purchase, a new WATCard is 
    successfully requested and created from the WAT Office (as seen by C1,5 on 
    line 50). This card then gets delivered again by the courier -- note the 
    transfer amount is now $5 since that is the balanced on the new WATCard (as 
    seen by t1,5 on line 52 and T1,5 on line 57 under Cour0). This event shows 
    the correct handling of a lost WATCard and the replacement process.

    EVENT 5:
    -------
    We see an event where Student 1 has insufficient funds to buy a soda, which 
    is priced at $6 when they only have $5 on their WATCard (as seen by T1,5 on 
    line 57 under Cour0). In this case, the student needs to transfer the 
    current soda cost plus $5 to their WATCard (6+5=11) -- this is first completed
    by the WAT Office (T1,11 on line 58) and then successfully delivered. This 
    is seen by t1,11 and T1,11 on lines 60 and 66 under Cour0 (note that t1,11 
    is completed when W is completed under WAT Office on line 60). Upon receiving 
    the funds, Student 1 can buy their next soda (B2,10 and B2,2 on line 68). 
    This event shows the correct handling of insufficient funds and the process 
    for reloading the WATCard.

    EVENT 6:
    -------
    We see an event where a vending machine is out of stock and Student 0 must 
    busy-wait for the machine to restock. On line 29, the Machine0 shows B2,0 
    indicating that there are 0 remaining sodas of flavour 2. Before the student 
    attempts to make their next purchase of this soda, they must busy-wait for 
    the machine to restock (as seen by r and R on lines 31-32 under Mach0) as it 
    receives a shipment of 1 soda since MaxShippedPerFlavour=1. After the delivery 
    is complete (D0,0 under Truck on line 32), the student ends busy-waiting and 
    buys the soda with B2,4 on line 33 and the machine again shows B2,0 since 
    there are now 0 remaining sodas left.

    EVENT 7:
    -------
    The output above illustrates an example where Student 1 has has both their 
    WATCard (delivered by the Courier at T1,5 on line 15) and their gift card at 
    the time of purchase, but the student chooses to use the gift card to buy a 
    soda (G2,0 under Stud1 and B2,0 under Mach0 on line 21) over their WATcard to 
    complete their purchase, as specified. The giftcard balance of $SodaCost is 
    sufficient to buy one soda and it is reset after the purchase such that their 
    next purchase made (B2,10 on line 68) is with their WATCard. This event shows 
    the correct handling of the gift card and its priority over the WATCard.
